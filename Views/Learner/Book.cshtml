@model Demo_Booking_Lessons_For_Driving.Models.Learner

@{
    ViewBag.Title = "Book";
}
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("Car Hub", "Book", "Learner", new { area = "" }, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav  navbar-right ">
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        @HttpContext.Current.User.Identity.Name
                    </a>
                    <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                        @if (Request.IsAuthenticated)
                        {

                            using (Html.BeginForm("Logout", "Employee", FormMethod.Post))
                            {
                                <a href="javascript:document.getElementById('logoutForm').submit()" >Logout</a>
                            }
                        }
                    </div>
                </li>
            </ul>
        </div>
    </div>
</div>


<div class="container ">
    <div class="card">
        <div class="card-header bg-primary " style="margin-top:20px;">
            <div class="row mb-4">
                <div class="col-lg-8 mx-auto text-center ">
                    <h1>Schedule  for practical driving licence Test </h1>
                </div>
            </div>
        </div>
        <div class="card-body" style="margin-top :10px;">
            @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
            {
                <div class="alert alert-success">
                    <strong>Success!</strong>@ViewBag.Message
                </div>
            }
            else
            {
                using (Html.BeginForm("Book", "Learner"))
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.IDNumber, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.TextBoxFor(m => m.IDNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IDNumber, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })


                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })


                        @Html.TextBoxFor(m => m.Surname, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })


                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })

                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">

                        @Html.LabelFor(model => model.TestingCenter, htmlAttributes: new { @class = "control-label col-md-2" })


                        @Html.TextBoxFor(m => m.TestingCenter, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TestingCenter, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">

                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        @Html.DropDownListFor(Model => Model.Description,
                                                                               new SelectList(ViewBag.Descriptions),
                                                                               "Select Descriptions", new { @class = "form-control" })

                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.CellNumber, htmlAttributes: new { @class = "control-label col-md-2" })


                        @Html.TextBoxFor(m => m.CellNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CellNumber, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group">

                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })

                        <div class="form-group ">
                            @Html.DropDownListFor(Model => Model.Category,
                                                                                   new SelectList(ViewBag.Gategories),
                                                                                   "Select Gategories", new { @class = "form-control" })

                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">


                        @Html.LabelFor(model => Model.Province, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.DropDownListFor(model => model.Province,
                                             new SelectList(ViewBag.Province),
                                             "Select Provinces",
                                             new { @class = "form-control" })


                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" class="btn btn-primary " value="Submit" />
                        </div>
                    </div>

                    if (ViewBag.Message != null)
                    {

                        <div class="alert alert-danger  ">
                            <strong>Error!</strong>@ViewBag.Message
                        </div>
                    }

                }
            }
        </div>
    </div>
</div>





