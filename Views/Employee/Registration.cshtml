@model Demo_Booking_Lessons_For_Driving.Models.Employee

@{
    ViewBag.Title = "Registration";
}
<div class="navbar navbar-inverse navbar-fixed-top">
    <div class="container">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            @Html.ActionLink("Car HUB", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
        </div>
        <div class="navbar-collapse collapse">
            <ul class="nav navbar-nav navbar-right">
                <li>@Html.ActionLink("Login", "Login", "Employee")</li>
            </ul>
        </div>
    </div>
</div>
<h2>Please enter all your details</h2>
@if(ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
{
    <div class="alert alert-success   ">
        <strong>Success!</strong>@ViewBag.Message
    </div>
}
else
{

    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    @Html.HiddenFor(model => model.EmployeeID)
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", style = "width:50%;" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control", style = "width:50%;" } })
            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", style = "width:50%;" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control", style = "width:50%;" } })
            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", style = "width:50%;" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmedPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmedPassword, new { htmlAttributes = new { @class = "form-control", style = "width:50%;" } })
            @Html.ValidationMessageFor(model => model.ConfirmedPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group ">
        <div class="col-md-offset-2 col-md-10">
            <label>Register as:</label>
            @Html.DropDownListFor(Model => Model.IsAdmin,
                                                                new SelectList(ViewBag.Actors), "Please select:", new { @class = "form-control" })
        </div>

    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="register" class="btn btn-default" />
        </div>
    </div>

</div>

        if(ViewBag.Message != null)
        {
            <div class="alert alert-danger  ">
                <strong>Error!</strong>@ViewBag.Message
            </div>
        }

    }
    
}




@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
